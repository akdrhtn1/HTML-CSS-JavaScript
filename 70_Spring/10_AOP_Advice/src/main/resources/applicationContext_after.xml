<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<context:component-scan base-package="com.spring.biz"></context:component-scan>
	
	
	<!-- == AOP 설정(xmlns:aop 추가) == -->
	<!-- *Impl 클래스의 모든 메소드 실행전 LogAdvice.printLog() 실행 -->
	<bean id="log" class="com.spring.biz.common.LogAdvice"/>
<!--  
	<aop:config>
		<aop:pointcut expression="execution(* com.spring.biz..*Impl.*(..))" id="allPointCut" />
		<aop:aspect ref="log">
			<aop:before pointcut-ref="allPointCut"  method="printLog"/>
		</aop:aspect>
	</aop:config>
-->

	<!-- Log4jAdvice 클래스 사용해서 로그남기기  -->
	
	<!-- After : 비즈니스 로직 싱행 후 언제나 동작(정상실행, 예외발생시) -->
	<bean id="after" class="com.spring.biz.common.AfterAdvice"></bean>
	
	<aop:config>
		<!-- 포인트컷(pointcut) : 핵심관심 중 AOP 적용대상으로 선절할 메소드 -->
		<aop:pointcut expression="execution(* com.spring.biz..*Impl.*(..))" id="allPointCut" />
		<aop:pointcut expression="execution(* com.spring.biz..*Impl.get*(..))" id="getPointCut" />
		<aop:aspect ref="after">
			<aop:after pointcut-ref="allPointCut" method="afterLog"/>
		</aop:aspect>
	</aop:config>

</beans>
